#!/usr/bin/env python3
#-*- coding: utf-8 -*-

"""
Ligne de commande
"""

import argparse

parser = argparse.ArgumentParser(description="Dictionnaire Littré en ligne de commande")
parser.add_argument("mot", help="le mot à rechercher")
parser.add_argument("-Q", "--no-quotes", action="store_true",
    help="désactive l'affichage des citations relatives au mot")
parser.add_argument("-S", "--no-synonyms", action="store_true",
    help="désactive l'affichage des synonymes du mot")
parser.add_argument("-H", "--no-history", action="store_true",
    help="désactive l'affichage de l'historique du mot")
parser.add_argument("-E", "--no-etymology", action="store_true",
    help="désactive l'affichage de l'étymologie du mot")
parser.add_argument("-s", "--short", action="store_true",
    help="affiche uniquement le mot et ses variantes. équivalent à -SHEQ")
args = parser.parse_args()

if args.short:
    args.no_quotes = True
    args.no_synonyms = True
    args.no_history = True
    args.no_etymology = True

"""
Récupération de la définition recherchée
"""

import os, sys

# Récupère l'emplacement du dossier contenant le dictionnaire
xmlittre_directory = os.environ.get("XMLITTRE_DIRECTORY")

if not xmlittre_directory:
    print("la variable d'environnement \"XMLITTRE_DIRECTORY\" doit exister", file=sys.stderr)
    sys.exit(1)

from LittreParser.parse import parser, entry_formatter
from LittreParser.error import EntryNotFound

p = parser(xmlittre_directory)

try:
    # TODO: récupérer une liste de mots proches en cas d'échec (mauvais accents,
    # faute de frappe, etc...)
    entries = p.get_entries_as_dict(
        args.mot,
        no_quotes=args.no_quotes,
        no_synonyms=args.no_synonyms,
        no_history=args.no_history,
        no_etymology=args.no_etymology
    )
except EntryNotFound:
    print("le mot n'a pas été trouvé", file=sys.stderr)
    sys.exit(1)

ef = entry_formatter(entries)
print(ef)
